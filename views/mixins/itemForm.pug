mixin itemForm(item = {})
  form(action=item._id ? `/edit/${item._id}` : `/add` method="POST")
    //- the /${item._id || ''} was added to double up the use of this template.
    //- In this way, this same template can be used for creating a new item,
    //- or editing an existing item. If there is no _id property on
    //- the item object, then the action will go to the route for /add/
    label(for="name").block Name
    input(type="text" name="name" value=item.name)
    .mt2 Stores:
      .flex.flex-center
        each store in Object.keys(h.stores)
          input(type="checkbox" name="stores" id=`stores-checkbox-${store}` value=`${store}`)
          label(for=`stores-checkbox-${store}`).mr2= h.stores[store].name
    .mt2 Default store:
      .flex.flex-center
        each store in Object.keys(h.stores)
          input(type="radio" name="default-store" id=`default-radio-${store}` value=`${store}`)
          label(for=`default-radio-${store}`).mr2= h.stores[store].name
    label(for="area").block.mt2 TJ Area
    input(type="number" name="area" value=item.area).block
    label(for="area").block.mt2 Moms Area
    input(type="number" name="area" value=item.area).block
    input.mt2.btn.btn-primary(type="submit" value="Save â†’")

  //- mixins can accept a parameter, in this case the empty object `item` by default, and which you can pass from the template that calls the mixin an object with whatever data; the data of which can be used, in this case `#{item.name}`
